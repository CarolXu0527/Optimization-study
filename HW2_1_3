function HW2_1_3

clc
d = 5;
N = 10; 
x = linspace(-d, d);
y = linspace(-d, d);
[X,Y] = meshgrid(x, y);
F = (2*(X.^2).*(Y.^2) + 5*X.^2 + 5*Y.^2)./((X + 1).^2 + (Y - 1).^2 + 2);
contour(X, Y, F, 'LevelStep', 1);
grid on;
axis square;
hold on;
shading interp;
colorbar;

x = random('uniform',-d,d,N,1);
y = random('uniform',-d,d,N,1);

f = (2*(x.^2).*(y.^2) + 5*x.^2 + 5*y.^2)./((x + 1).^2 + (y - 1).^2 + 2);
plot(x,y,'bo')
[F,I] = sort(f);

% get the minimun value of current result set
plot(x(I(1)), y(I(1)),'bo', 'MarkerSize',12)
disp(['x_star of first iter: ' num2str(x(I(1))) ])
disp(['y_star of first iter: ' num2str(y(I(1))) ])
disp(['F_star of first iter: ' num2str(F(1)) ])
text(x(I(1))+0.2, y(I(1)),'\leftarrow First Estimate of Minimum')

% Starting at the lowest value of f, do another iteration
d = 2;
x0 = x(I(1)); 
y0 = y(I(1));
clear x y ;
x = random('uniform',x0-d,x0+d,N,1);
y = random('uniform',y0-d,y0+d,N,1);
plot(x,y,'rs');
f = (2*(x.^2).*(y.^2) + 5*x.^2 + 5*y.^2)./((x + 1).^2 + (y - 1).^2 + 2);

clear F I
[F,I] = sort(f);
plot(x(I(1)),y(I(1)),'rs','MarkerSize',12);
disp(['x_star of second iter: ' num2str(x(I(1))) ])
disp(['y_star of second iter: ' num2str(y(I(1))) ])
disp(['F_star of second iter: ' num2str(F(1)) ])
text(x(I(1))+0.2, y(I(1)),'\leftarrow Second Estimate of Minimum')
hold off
return
